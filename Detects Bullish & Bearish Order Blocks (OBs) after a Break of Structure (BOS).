//@version=6
indicator("Probable Order Blocks: Buy/Sell Signals", overlay=true, max_boxes_count=50, max_bars_back=5000)

// === INPUTS ===
structure_lookback = input.int(10, "Structure Lookback", minval=3)
impulse_candles = input.int(3, "Impulse Candles for OB", minval=1)
box_lifetime = input.int(50, "Max Bars to Keep OB Box", minval=10)
show_labels = input.bool(true, "Show OB Labels")
show_bull_ob = input.bool(true, "Show Bullish OBs")
show_bear_ob = input.bool(true, "Show Bearish OBs")

// === STRUCTURE DETECTION ===
isSwingHigh() => high[structure_lookback] == ta.highest(high, structure_lookback * 2 + 1)
isSwingLow()  =>  low[structure_lookback] == ta.lowest(low,  structure_lookback * 2 + 1)

var float last_swing_high = na
var float last_swing_low  = na
var int last_swing_high_idx = na
var int last_swing_low_idx  = na

if isSwingHigh()
    last_swing_high := high[structure_lookback]
    last_swing_high_idx := bar_index - structure_lookback
if isSwingLow()
    last_swing_low := low[structure_lookback]
    last_swing_low_idx := bar_index - structure_lookback

// === BOS DETECTION ===
bos_up   = ta.crossover(close, last_swing_high) and not na(last_swing_high)
bos_down = ta.crossunder(close, last_swing_low) and not na(last_swing_low)

// === OB VALIDATION ===
bool bull_ob_valid = false
int bull_ob_idx = na
if bos_up
    for i = 1 to impulse_candles
        if close[i] < open[i]
            bull_ob_valid := true
            bull_ob_idx := bar_index - i
            break

bool bear_ob_valid = false
int bear_ob_idx = na
if bos_down
    for i = 1 to impulse_candles
        if close[i] > open[i]
            bear_ob_valid := true
            bear_ob_idx := bar_index - i
            break

// === OB BOX MANAGEMENT ===
var box[] bull_boxes = array.new_box()
var int[] bull_times = array.new_int()
var box[] bear_boxes = array.new_box()
var int[] bear_times = array.new_int()

// === CREATE NEW OB BOXES ===
if bull_ob_valid and show_bull_ob
    ob_top = math.max(open[bar_index - bull_ob_idx], close[bar_index - bull_ob_idx])
    ob_bot = math.min(open[bar_index - bull_ob_idx], close[bar_index - bull_ob_idx])
    b = box.new(left=bull_ob_idx, right=bar_index + 20, top=ob_top, bottom=ob_bot, bgcolor=color.new(color.green, 85), border_color=color.green, extend=extend.right)
    array.push(bull_boxes, b)
    array.push(bull_times, bar_index)
    if show_labels
        label.new(x=bull_ob_idx, y=ob_bot, text="ðŸŸ¢ Bullish OB\n(Reversal)", style=label.style_label_up, color=color.green, textcolor=color.white, size=size.small)

if bear_ob_valid and show_bear_ob
    ob_top = math.max(open[bar_index - bear_ob_idx], close[bar_index - bear_ob_idx])
    ob_bot = math.min(open[bar_index - bear_ob_idx], close[bar_index - bear_ob_idx])
    b = box.new(left=bear_ob_idx, right=bar_index + 20, top=ob_top, bottom=ob_bot, bgcolor=color.new(color.red, 85), border_color=color.red, extend=extend.right)
    array.push(bear_boxes, b)
    array.push(bear_times, bar_index)
    if show_labels
        label.new(x=bear_ob_idx, y=ob_top, text="ðŸ”´ Bearish OB\n(Reversal)", style=label.style_label_down, color=color.red, textcolor=color.white, size=size.small)

// === CLEAN OLD BULL BOXES ===
if array.size(bull_boxes) > 0
    for i = array.size(bull_boxes) - 1 to 0
        t = array.get(bull_times, i)
        if bar_index - t > box_lifetime
            box.delete(array.get(bull_boxes, i))
            array.remove(bull_boxes, i)
            array.remove(bull_times, i)

// === CLEAN OLD BEAR BOXES ===
if array.size(bear_boxes) > 0
    for i = array.size(bear_boxes) - 1 to 0
        t = array.get(bear_times, i)
        if bar_index - t > box_lifetime
            box.delete(array.get(bear_boxes, i))
            array.remove(bear_boxes, i)
            array.remove(bear_times, i)


// === OB TEST DETECTION ===
bull_ob_tested = false
bull_signal = false
if array.size(bull_boxes) > 0
    for i = 0 to array.size(bull_boxes) - 1
        b = array.get(bull_boxes, i)
        if low <= box.get_top(b) and high >= box.get_bottom(b)
            bull_ob_tested := true
            // Confirm buy: candle closes bullish inside OB
            bull_signal := close > open and low >= box.get_bottom(b) and high <= box.get_top(b)

bear_ob_tested = false
bear_signal = false
if array.size(bear_boxes) > 0
    for i = 0 to array.size(bear_boxes) - 1
        b = array.get(bear_boxes, i)
        if low <= box.get_top(b) and high >= box.get_bottom(b)
            bear_ob_tested := true
            // Confirm sell: candle closes bearish inside OB
            bear_signal := close < open and low >= box.get_bottom(b) and high <= box.get_top(b)

// === PLOT BUY/SELL SIGNALS ===
plotshape(bull_signal, title="Buy Signal", style=shape.labelup, location=location.belowbar, color=color.green, text="BUY", textcolor=color.white, size=size.small)
plotshape(bear_signal, title="Sell Signal", style=shape.labeldown, location=location.abovebar, color=color.red, text="SELL", textcolor=color.white, size=size.small)

// === ALERTS ===
alertcondition(bull_signal, title="Buy Signal", message="Price confirmed bullish OB zone. BUY!")
alertcondition(bear_signal, title="Sell Signal", message="Price confirmed bearish OB zone. SELL!")

// === STATS ===
label.new(bar_index, high, "ðŸŸ¢ Bull OBs: " + str.tostring(array.size(bull_boxes)) + "\nðŸ”´ Bear OBs: " + str.tostring(array.size(bear_boxes)), style=label.style_label_left, textcolor=color.white, size=size.tiny, color=color.gray)
