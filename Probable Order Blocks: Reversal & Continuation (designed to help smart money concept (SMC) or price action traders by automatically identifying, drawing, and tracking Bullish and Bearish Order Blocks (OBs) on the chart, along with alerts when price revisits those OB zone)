//@version=6
indicator("Probable Order Blocks: Reversal & Continuation", overlay=true, max_boxes_count=50, max_bars_back=5000)

// === INPUTS ===
structure_lookback = input.int(10, "Structure Lookback", minval=3)
impulse_candles = input.int(3, "Impulse Candles (for OB validity)", minval=1)
show_labels = input.bool(true, "Show OB Labels")
show_bull_ob = input.bool(true, "Show Bullish OBs")
show_bear_ob = input.bool(true, "Show Bearish OBs")

// === STRUCTURE DETECTION ===
isSwingHigh() =>
    high[structure_lookback] == ta.highest(high, structure_lookback * 2 + 1)
isSwingLow() =>
    low[structure_lookback] == ta.lowest(low, structure_lookback * 2 + 1)

var float last_swing_high = na
var float last_swing_low = na
var int last_swing_high_idx = na
var int last_swing_low_idx = na

if isSwingHigh()
    last_swing_high := high[structure_lookback]
    last_swing_high_idx := bar_index - structure_lookback
if isSwingLow()
    last_swing_low := low[structure_lookback]
    last_swing_low_idx := bar_index - structure_lookback

// === BOS DETECTION ===
bos_up = ta.crossover(close, last_swing_high) and not na(last_swing_high)
bos_down = ta.crossunder(close, last_swing_low) and not na(last_swing_low)

// === ORDER BLOCK DETECTION ===
bool bull_ob_valid = false
int bull_ob_idx = na
if bos_up
    for i = 1 to impulse_candles
        if close[i] < open[i]
            bull_ob_valid := true
            bull_ob_idx := bar_index - i
            break

bool bear_ob_valid = false
int bear_ob_idx = na
if bos_down
    for i = 1 to impulse_candles
        if close[i] > open[i]
            bear_ob_valid := true
            bear_ob_idx := bar_index - i
            break

// === ORDER BLOCK BOXES & LABELS ===
var box[] bull_boxes = array.new_box()
var box[] bear_boxes = array.new_box()

if bull_ob_valid and show_bull_ob
    float ob_top = math.max(open[bar_index - bull_ob_idx], close[bar_index - bull_ob_idx])
    float ob_bot = math.min(open[bar_index - bull_ob_idx], close[bar_index - bull_ob_idx])
    bull_box = box.new(left=bull_ob_idx, right=bar_index + 20, top=ob_top, bottom=ob_bot, bgcolor=color.new(color.green, 85), border_color=color.green, extend=extend.right)
    array.push(bull_boxes, bull_box)
    if show_labels
        label.new(x=bull_ob_idx, y=ob_bot, text="Bullish OB\n" + (bos_up ? "Reversal" : "Continuation"), style=label.style_label_up, color=color.green, textcolor=color.white, size=size.tiny)
if bear_ob_valid and show_bear_ob
    float ob_top = math.max(open[bar_index - bear_ob_idx], close[bar_index - bear_ob_idx])
    float ob_bot = math.min(open[bar_index - bear_ob_idx], close[bar_index - bear_ob_idx])
    bear_box = box.new(left=bear_ob_idx, right=bar_index + 20, top=ob_top, bottom=ob_bot, bgcolor=color.new(color.red, 85), border_color=color.red, extend=extend.right)
    array.push(bear_boxes, bear_box)
    if show_labels
        label.new(x=bear_ob_idx, y=ob_top, text="Bearish OB\n" + (bos_down ? "Reversal" : "Continuation"), style=label.style_label_down, color=color.red, textcolor=color.white, size=size.tiny)

// === ALERT CONDITIONS ===
bull_ob_triggered = false
if array.size(bull_boxes) > 0
    for i = 0 to array.size(bull_boxes) - 1
        b = array.get(bull_boxes, i)
        bull_ob_triggered := bull_ob_triggered or (low <= box.get_top(b) and high >= box.get_bottom(b))
alertcondition(bull_ob_triggered, title="Price in Bullish OB", message="Price entered a Bullish Order Block zone")

bear_ob_triggered = false
if array.size(bear_boxes) > 0
    for i = 0 to array.size(bear_boxes) - 1
        b = array.get(bear_boxes, i)
        bear_ob_triggered := bear_ob_triggered or (low <= box.get_top(b) and high >= box.get_bottom(b))
alertcondition(bear_ob_triggered, title="Price in Bearish OB", message="Price entered a Bearish Order Block zone")

// === STATS DISPLAY ===
bull_count = array.size(bull_boxes)
bear_count = array.size(bear_boxes)
label.new(bar_index, high, "Bull OBs: " + str.tostring(bull_count) + "\nBear OBs: " + str.tostring(bear_count), style=label.style_label_left, textcolor=color.white, size=size.tiny, color=color.gray)

